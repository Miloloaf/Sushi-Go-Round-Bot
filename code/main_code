"""

All coordinates assume a screen resolution size of 2560 * 1440, and Firefox maximized
No scrolling
x_pad = 788
y_pad = 345
Play area = x_pad+1, y_pad+1, 1424, 808
"""

# Globals
# ------------

x_pad = 788
y_pad = 225 #328

from PIL import ImageGrab, ImageOps
import os, time
import win32api, win32con
from numpy import *

def screenGrab():
    box = (x_pad + 1, y_pad + 1, x_pad + 636, y_pad + 480)
    im = ImageGrab.grab(box)
    # im.save(os.getcwd() + '\\full_snap__' + str(int(time.time())) + '.png', 'PNG')
    # im.show()
    return im


def grab():
    box = (x_pad + 1, y_pad + 1, x_pad + 636, y_pad + 480)
    im = ImageOps.grayscale(ImageGrab.grab(box))
    a = array(im.getcolors())
    a = a.sum()
    print(a)
    return a

def main():
    pass

if __name__ == '__main__':
    main()

def leftClick():
    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTDOWN,0,0)
    time.sleep(.1)
    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTUP,0,0)
    print("Click.")

def leftDown():
    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTDOWN,0,0)
    time.sleep(.1)
    print ("left Down")

def leftUp():
    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTUP,0,0)
    time.sleep(.1)
    print("left release")

def mousePos(cord):
    win32api.SetCursorPos((x_pad + cord[0], y_pad + cord[1]))

def get_cords():
    x,y = win32api.GetCursorPos()
    x = x - x_pad
    y = y - y_pad
    print (x,y)

def startGame():
    #location of first menu
    mousePos((321, 112))
    leftClick()
    time.sleep(.1)

    #location of second menu
    mousePos((312, 292))
    leftClick()
    time.sleep(.1)

    #location of third menu
    mousePos((578, 354))
    leftClick()
    time.sleep(.1)

    #location of fourth menu
    mousePos((311,268))
    leftClick()
    time.sleep(.1)

# startGame()

class Cord:

    f_shrimp = (46,231)
    f_rice = (90,231)
    f_nori = (44,276)
    f_roe = (79, 280)
    f_salmon = (47, 332)
    f_unagi = (101, 334)

#--------------------

    phone = (572, 257)

    menu_toppings = (527, 170)

    t_shrimp = (487, 125)
    t_nori = (572, 113)
    t_roe = (494, 167)
    t_salmon = (571, 178)
    t_unagi = (489, 225)
    t_exit = (590, 231)

    delivery_norm = (492, 195)

    menu_rice = (538, 195)
    buy_rice = (534, 176)

    menu_sake = (536, 210)
    buy_sake = (533, 170)

def clear_tables():
    mousePos((90, 107))
    leftClick()

    mousePos((191, 103))
    leftClick()

    mousePos((283,106))
    leftClick()

    mousePos((383, 104))
    leftClick()

    mousePos((495, 108))
    leftClick()

    mousePos((590, 104))
    leftClick()
    time.sleep(.1)

"""

Recipes:

    onigiri
        2 rice, 1nori
    
    caliroll:
        1 rice, 1 nori, 1 roe
        
    gunkan:
        1 rice, 1 nori, 2 roe
        
    
"""
def makeFood(food):
    if food == "caliroll":
        print ("Making a caliroll")
        foodOnHand["rice"] -= 1
        foodOnHand["nori"] -= 1
        foodOnHand["roe"] -= 1
        mousePos(Cord.f_rice)
        leftClick()
        time.sleep(.05)
        mousePos(Cord.f_nori)
        leftClick()
        time.sleep(.05)
        mousePos(Cord.f_roe)
        leftClick()
        time.sleep(.1)
        foldMat()
        time.sleep(1.5)

    elif food == "onigiri":
        foodOnHand["rice"] -= 2
        foodOnHand["nori"] -= 1
        mousePos(Cord.f_rice)
        leftClick()
        time.sleep(.05)
        mousePos(Cord.f_rice)
        leftClick()
        time.sleep(.05)
        mousePos(Cord.f_nori)
        leftClick()
        time.sleep(.05)
        foldMat()
        time.sleep(1.5)

    elif food == "gunkan":
        foodOnHand["rice"] -= 1
        foodOnHand["nori"] -= 1
        foodOnHand["roe"] -= 2
        mousePos(Cord.f_rice)
        leftClick()
        time.sleep(.05)
        mousePos(Cord.f_nori)
        leftClick()
        time.sleep(.05)
        mousePos(Cord.f_roe)
        leftClick()
        time.sleep(.05)
        mousePos(Cord.f_roe)
        leftClick()
        time.sleep(.05)
        foldMat()
        time.sleep(1.5)


def foldMat():
    mousePos((Cord.f_rice[0]+40, Cord.f_rice[1]))
    leftClick()
    time.sleep(0.1)

def buyFood(food):

    if food == "rice":
        mousePos(Cord.phone)
        time.sleep(.1)
        leftClick()
        mousePos(Cord.menu_rice)
        time.sleep(.05)
        leftClick()
        s = screenGrab()
        if s.getpixel(Cord.buy_rice) != (127,127,127):
            print ("rice is available")
            mousePos(Cord.buy_rice)
            time.sleep(.1)
            leftClick()
            mousePos(Cord.delivery_norm)
            foodOnHand["rice"] += 10
            time.sleep(.1)
            leftClick()
            time.sleep(2.5)
        else:
            print("rice is NOT available")
            mousePos(Cord.t_exit)
            time.sleep(1)
            leftClick()
            buyFood(food)

    elif food == "nori":
        mousePos(Cord.phone)
        time.sleep(.1)
        leftClick()
        mousePos(Cord.menu_toppings)
        time.sleep(.05)
        leftClick()
        s = screenGrab()
        if s.getpixel(Cord.t_nori) != (109,123,127):
            print ("nori is available")
            mousePos(Cord.t_nori)
            time.sleep(.1)
            leftClick()
            mousePos(Cord.delivery_norm)
            foodOnHand["nori"] += 10
            time.sleep(.1)
            leftClick()
            time.sleep(2.5)
        else:
            print("nori is NOT available")
            mousePos(Cord.t_exit)
            time.sleep(1)
            leftClick()
            buyFood(food)

    elif food == "roe":
        mousePos(Cord.phone)
        time.sleep(.1)
        leftClick()
        mousePos(Cord.menu_toppings)
        time.sleep(.05)
        leftClick()
        s = screenGrab()
        if s.getpixel(Cord.t_roe) != (33,30,11):
            print("roe is available")
            mousePos(Cord.t_roe)
            time.sleep(.1)
            leftClick()
            mousePos(Cord.delivery_norm)
            foodOnHand["roe"] += 10
            time.sleep(.1)
            leftClick()
            time.sleep(2.5)
        else:
            print("roe is NOT available")
            mousePos(Cord.t_exit)
            leftClick()
            time.sleep(1)
            buyFood(food)




    mousePos(Cord.phone)

    mousePos(Cord.menu_toppings)

    mousePos(Cord.t_shrimp)
    mousePos(Cord.t_nori)
    mousePos(Cord.t_roe)
    mousePos(Cord.t_salmon)
    mousePos(Cord.t_unagi)
    mousePos(Cord.t_exit)

    mousePos(Cord.menu_rice)
    mousePos(Cord.buy_rice)

    mousePos(Cord.menu_sake)
    mousePos(Cord.buy_sake)

    mousePos(Cord.delivery_norm)

foodOnHand = {'shrimp':5,
              'rice':10,
              'nori':10,
              'roe':10,
              'salmon':5,
              'unagi':5}

def checkFood():
    for i,j in foodOnHand.items():
        if i=="nori" or i== "rice" or i=="roe":
            if j <= 4:
                print("%s is low and needs to be replenished" % i)
                buyFood(i)

def get_seat_one():
    box = (x_pad + 22, y_pad + 62, x_pad+  22 + 62, y_pad + 62 + 14)
    im = ImageOps.grayscale(ImageGrab.grab(box))
    a = array(im.getcolors())
    a = a.sum()
    print (a)
    im.save(os.getcwd()+r"\seat_one__"+str(int(time.time()))+".png", "PNG")
    im.show()
    return a

def get_seat_two():
    box = (x_pad + 123, y_pad + 62, x_pad + 123 + 62, y_pad + 62 + 14)
    im = ImageOps.grayscale(ImageGrab.grab(box))
    a = array(im.getcolors())
    a = a.sum()
    print(a)
    im.save(os.getcwd()+r"\seat_two__"+str(time.time())+".png","PNG")
    return a

def get_seat_three():
    box = (x_pad + 224, y_pad + 62, x_pad + 224 + 62, y_pad + 62 + 14)
    im = ImageOps.grayscale(ImageGrab.grab(box))
    a = array(im.getcolors())
    a = a.sum()
    print(a)
    im.save(os.getcwd()+r"\seat_three__"+str(time.time())+".png","PNG")
    return a

def get_seat_four():
    box = (x_pad + 325,y_pad + 62,x_pad + 325 + 62, y_pad + 62 + 14)
    im = ImageOps.grayscale(ImageGrab.grab(box))
    a = array(im.getcolors())
    a = a.sum()
    print(a)
    im.save(os.getcwd()+r"\seat_four__"+str(time.time())+".png","PNG")
    return a

def get_seat_five():
    box = (x_pad + 426, y_pad + 62,x_pad + 426 + 62, y_pad + 62 + 14)
    im = ImageOps.grayscale(ImageGrab.grab(box))
    a = array(im.getcolors())
    a = a.sum()
    print(a)
    im.save(os.getcwd()+r"\seat_five__"+str(time.time())+".png","PNG")
    return a

def get_seat_six():
    box = (x_pad + 527, y_pad + 62,x_pad + 527 + 62, y_pad + 62+14)
    im = ImageOps.grayscale(ImageGrab.grab(box))
    a = array(im.getcolors())
    a = a.sum()
    print(a)
    im.save(os.getcwd()+r"\seat_six__"+str(time.time())+".png", "PNG")
    return a

def get_all_seats():
    get_seat_one()
    get_seat_two()
    get_seat_three()
    get_seat_four()
    get_seat_five()
    get_seat_six()

"""
im.getpixel(Cord.t_nori)
(109, 123, 127)
im.getpixel(Cord.t_roe)
(33, 30, 11)
im.getpixel(Cord.t_salmon)
(127, 61, 0)
im.getpixel(Cord.t_shrimp)
(127, 127, 127)
im.getpixel(Cord.t_unagi)
(127, 71, 47)
im.getpixel(Cord.buy_rice)
(127, 127, 127)
im.getpixel(Cord.buy_sake)
(0, 0, 0)

"""
"""

Plate Cords:

    90, 107
    191, 103
    283, 106
    383, 104
    495, 108
    602, 104

"""
